name: Update Repo Permissions

on:
  push:
    branches:
      - main

jobs:
  update-permissions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Update Repo Permissions
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context, github } = require('@actions/github');

            async function run() {
              const repo = context.repo;

              // Establish branch protection rules
              await github.repos.updateBranchProtection({
                ...repo,
                branch: 'main',
                required_status_checks: null,
                enforce_admins: true,
                required_pull_request_reviews: {
                  dismissal_restrictions: {
                    users: [],
                    teams: ['team-slug']
                  },
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  required_approving_review_count: 1
                },
                restrictions: null
              });

                // Create repository environments
                await Promise.all([
                github.repos.createOrUpdateEnvironment({
                  ...repo,
                  environment_name: 'dev1',
                  wait_timer: 10,
                  review_policy: {
                  required_approving_teams: ['team-slug'],
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  required_approving_review_count: 1
                  }
                }),
                github.repos.createOrUpdateEnvironment({
                  ...repo,
                  environment_name: 'qa1',
                  wait_timer: 10,
                  review_policy: {
                  required_approving_teams: ['team-slug'],
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  required_approving_review_count: 1
                  }
                }),
                github.repos.createOrUpdateEnvironment({
                  ...repo,
                  environment_name: 'sandbox',
                  wait_timer: 10,
                  review_policy: {
                  required_approving_teams: ['team-slug'],
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  required_approving_review_count: 1
                  }
                }),
                github.repos.createOrUpdateEnvironment({
                  ...repo,
                  environment_name: 'production',
                  wait_timer: 10,
                  review_policy: {
                  required_approving_teams: ['team-slug'],
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  required_approving_review_count: 1
                  }
                })
                ]);

              // Add teams to the repository
              await github.repos.addTeamAccess({
                ...repo,
                team_slug: 'team-slug',
                permission: 'admin'
              });
            }

            run();
